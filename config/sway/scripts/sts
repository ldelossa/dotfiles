#!/bin/bash
IFS=$'\n'

header="=== Windows ==="
if [[ -n $STS_FIFO ]]; then
    # we are in the forked shell, read from
    # the provided FIFO and obtain window str
    # and pipe to fzf for selection.
    str=$(cat $STS_FIFO)
    rm -rf $STS_FIFO
    selection=$(printf $str | fzf --layout reverse --header $header --color)
    id=$(echo $selection | cut -d ":" -f1)
    if [[ -z $id ]]; then
        exit
    fi
    swaymsg [con_id="$id"] focus
    exit
fi

windows=($(swaymsg -t get_tree| jq -r 'recurse(.nodes[]?) | recurse(.floating_nodes[]?) | select(.type=="con"), select(.type=="floating_con") | select((.app_id != null) or .name != null) | {id, app_id, name} | .id, .app_id, .name'))

# build strings we will printf to fzf
str=""
# keep largest string length and lines 
# for terminal size
columns=${#header}
lines=0
for ((i=0; i<"${#windows[@]}"; i=i+3,lines++)); do
    id="${windows[i]}"
    app_id="${windows[i+1]}"
    name="${windows[i+2]}"

    building_string="$id:"
    if [[ $app_id != "null" ]]; 
    then
        building_string="$building_string $app_id"
    fi
    if [[ $name != "null" ]];
    then
        building_string="$building_string : $name"
    fi
    if [[ ${#building_string} -gt $columns ]];
    then
        str_largest="$building_string"
        columns=${#building_string}
    fi
    str="$str$building_string\n" 
done

# some adjustments for floating window size
lines=$((lines+3))
columns=$((columns+5))
if [[ columns -gt 100 ]];
then
    columns=100
fi

sts_fifo=/tmp/sts-$(date +%s)
mkfifo $sts_fifo
STS_FIFO=$sts_fifo zsh -c "alacritty -o window.dimensions.columns=$columns -o window.dimensions.lines=$lines -o font.size=16.0 --title "fzf-switcher" -e /home/louis/git/dotfiles/config/sway/scripts/sts"&
echo -n $str > $sts_fifo
