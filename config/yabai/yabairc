#!/usr/bin/env sh

#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#configure-scripting-addition
#
# yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
# sudo yabai --load-sa
#

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# global settings
yabai -m config                                 \
    external_bar                 off:40:0       \
    menubar_opacity              1.0            \
    mouse_follows_focus          on             \
    focus_follows_mouse          on             \
    display_arrangement order    default        \
    window_origin_display        default        \
    window_placement             second_child   \
    window_zoom_persist          on             \
    window_shadow                on             \
    window_animation_duration    0.0            \
    window_animation_easing      ease_out_circ  \
    window_opacity_duration      0.0            \
    active_window_opacity        1.0            \
    normal_window_opacity        0.90           \
    window_opacity               off            \
    insert_feedback_color        0xffd75f5f     \
    split_ratio                  0.50           \
    split_type                   auto           \
    auto_balance                 off            \
    top_padding                  8             \
    bottom_padding               8             \
    left_padding                 8             \
    right_padding                8             \
    window_gap                   06             \
    layout                       stack          \
    mouse_modifier               fn             \
    mouse_action1                move           \
    mouse_action2                resize         \
    mouse_drop_action            stack

yabai -m rule --add app="^System Preferences$" manage=off
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Calculator$" manage=off
yabai -m rule --add app="^1Password$" manage=off

# terminal scratch pad
yabai -m rule --add app="^kitty$" title="scratchpad" scratchpad="terminal" grid="6:6:1:1:4:4"

# YabaiHammerSpoon integration signals
yabai -m signal --add event=space_changed action="hs -c 'hs.ipc.remotePort(\"yabaiHammerSpoon:onSpacesChanged\"):sendMessage(\"\", 1, 0, true)'"
yabai -m signal --add event=application_activated action="hs -c 'hs.ipc.remotePort(\"yabaiHammerSpoon:onApplicationsChanged\"):sendMessage(\"\", 1, 0, true)'"
yabai -m signal --add event=display_changed action="hs -c 'hs.ipc.remotePort(\"yabaiHammerSpoon:onDisplaysChanged\"):sendMessage(\"\", 1, 0, true)'"
yabai -m signal --add event=window_created action="hs -c 'hs.ipc.remotePort(\"yabaiHammerSpoon:onWindowsChanged\"):sendMessage(\"\", 1, 0, true)'"
yabai -m signal --add event=window_destroyed action="hs -c 'hs.ipc.remotePort(\"yabaiHammerSpoon:onWindowsChanged\"):sendMessage(\"\", 1, 0, true)'"
yabai -m signal --add event=window_focused action="hs -c 'hs.ipc.remotePort(\"yabaiHammerSpoon:onWindowsChanged\"):sendMessage(\"\", 1, 0, true)'"
yabai -m signal --add event=window_moved action="hs -c 'hs.ipc.remotePort(\"yabaiHammerSpoon:onWindowsChanged\"):sendMessage(\"\", 1, 0, true)'"
yabai -m signal --add event=window_resized action="hs -c 'hs.ipc.remotePort(\"yabaiHammerSpoon:onWindowsChanged\"):sendMessage(\"\", 1, 0, true)'"
yabai -m signal --add event=window_minimized action="hs -c 'hs.ipc.remotePort(\"yabaiHammerSpoon:onWindowsChanged\"):sendMessage(\"\", 1, 0, true)'"
yabai -m signal --add event=window_deminimized action="hs -c 'hs.ipc.remotePort(\"yabaiHammerSpoon:onWindowsChanged\"):sendMessage(\"\", 1, 0, true)'"

echo "yabai configuration loaded.."

